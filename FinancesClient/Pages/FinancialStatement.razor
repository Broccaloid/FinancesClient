@page "/financialstatement"

@using FinancesClient.Services
@using Microsoft.Extensions.Logging

@inject ILogger<FinancialStatement> Logger
@inject IJSRuntime JsRuntime
@inject IFinancesService FinancesService

<h1>Financial Statement</h1>

@if (statement == null)
{
    <h3>Plese, enter a date range</h3>
    <br />
    <p>Date start</p>
    <input @bind="@dateStart" type="date" />
    <br />
    <br />
    <p>Date end</p>
    <input @bind="@dateEnd" type="date" />
    <br />
    <br />
    <button @onclick="GetFinancialStatement">Get Financial Statement</button>
}
else
{
    <FinancialStatementOutput Statement="@statement" />
}

@code {
    private Data.FinancialStatement statement;
    private DateTime dateStart;
    private DateTime dateEnd;

    private async Task GetFinancialStatement()
    {
        try
        {
            statement = await FinancesService.GetFinancialStatement(dateStart, dateEnd).Launch();
        }
        catch (Exception ex)
        {
            Logger.LogWarning("No operations were found");
            await Alert(ex.Message);
        }
    }

    private async Task Alert(string message)
    {
        await JsRuntime.InvokeVoidAsync("Alert", message);
    }
}